{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Consolas;}{\f2\fnil\fcharset0 Consolas;}}
{\colortbl ;\red0\green0\blue255;\red255\green0\blue0;\red0\green0\blue0;\red165\green165\blue165;\red0\green128\blue128;\red63\green127\blue127;\red127\green0\blue127;\red42\green0\blue255;\red102\green102\blue102;\red127\green0\blue85;\red191\green95\blue63;\red128\green128\blue128;\red63\green127\blue95;\red63\green95\blue191;}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\lang9\f0\fs22\par
\ul\b\fs28 TUTORIAL #2 notes: JSP (Java Server Pages)\ulnone\b0\fs22\line\i We are starting at #2 because I knew everything in #1 \line from my TomCat+SpringMVC research.\line @#:## markers are referencing the video tutorial:\line{\field{\*\fldinst{HYPERLINK "https://www.youtube.com/watch?v=urdLWd0vVgo\\\\"}}{\fldrslt{\ul\cf1 https://www.youtube.com/watch?v=urdLWd0vVgo\i0\\}}}\f0\fs22\par
\b Server Setup:\b0\line Note: You don't need to be in a project for this part.\line The setup server exists independently of the project.\line\line\b Set up server:\line //SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS//\b0\line Step1: Get to "Server Runtime Environment" \i <-- non-plural "Environment"\i0\line Way#1: \cf2 Window > Preferences > Servers > Runtime Environment\b\fs28 s\cf0\b0\i\fs22 . (plural)\i0\line                 Hit "add" button.\line Way#2: \cf2 Window > Show View > Other > Server > Servers > OK\cf0\line                 Then Click: "New Server Wizard" in the servers tab at the\line                  rectangular docked ui at the bottom of the screen.\line                  NOTE: Way#2 might not work if you've already set up a server before.\line\line\b Step2: New Server Runtime Environment Dialog:\b0\line\cf2 Select: Apache > Apache Tomcat v7.0\cf0\line Hit Next\line Name your server configuration.\line Hit Finish.\line\line\b Step3: Switch Location:\b0\line In the "servers" panel on the bottom UI:\line Right-Click your server > Properties\line Dialog titled: \cf3\i Properties for YourServerName at... \i0 Will pop up.\line Hit the "Switch Location" button.\line\cf0 This button will toggle location between:\line [workspace metadata] and \cf2 /Servers/YourServername at localhost.server\cf0\line We want to use the localhost.server one.\line Hit Apply.\line Hit Ok.\par
\b Step4: Change Sever Locations:\b0\line DOUBLE CLICK your server within the servers panel.\line An OVERVIEW window with configuration settings will show up.\line Under "ServerLocations"\line We want to select the radio option box for\line\cf2 "Use Tomcat installation (takes control of Tomcat installation)"\cf0\line NOTE: When I was doing SpringMVC tutorials. I did NOT do this step.\line This server setup is specific to the way it was done for the .JSP tutorials.\par
\b Step5: Test Server  @5:10-@6:10\b0\line Goto localhost:8080\line stop server\cf4\i  (Right Click on server in server's panel to find option)\line\cf0\i0 start server \cf4 (Right Click on server in server's panel to find option)\line\cf0 Goto localhost:8080\line\line What you should see should be a web page for tomcat.\line Like one of those web pages you see when you access a router.\line\b //SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS//\par
\par
\ul\fs28 Tutorial Notes #3: Developing a simple JSP page:\ulnone\fs22\line{\field{\*\fldinst{HYPERLINK "https://www.youtube.com/watch?v=7vx2vDDwCqc"}}{\fldrslt{\ul\cf1 https://www.youtube.com/watch?v=7vx2vDDwCqc}}}\f0\fs22\line Main Steps:\cf4  @0:00- 0:58\cf0\line\b0 1. Create dynamic web project. \line 2. Create .jsp file. \line 3. Start TomCat server and deploy the project. \line\line\b 1: Creating dynamic web project:\b0\line In solution explorer\cf4 :      @1:00- 1:05:   \cf0        \line\cf2 Servers --> TomCat -->Right Click --> New --> Project. \cf0\line Browse for project template\cf4 .       @1:08-2:55     \cf0  \line\cf2 Web --> Dynamic Web Project            \cf0\line Click Next.            \line Name your project.            \line Next.(do nothing) Next.            \line Generate web.xml content descriptor \cf4 @2:10            \cf0\line Click FINISH \cf4 @2:55  \line\cf0 We now have JSP project showing up in solution explorer. \line First step is now finished\cf4 .   @3:27 \cf0\line\line Here is what your auto-generated web.xml looks like:\line Web.xml: (Start)\line\cf5\f1\fs20 <?\cf6 xml\cf0  \cf7 version\cf3 =\cf8\i "1.0"\cf0\i0  \cf7 encoding\cf3 =\cf8\i "UTF-8"\cf5\i0 ?>\cf0\line\cf5 <\cf6 web-app\cf0  \cf7 xmlns:xsi\cf3 =\cf8\i "http://www.w3.org/2001/XMLSchema-instance"\cf0\i0  \cf7 xmlns\cf3 =\cf8\i "http://java.sun.com/xml/ns/javaee"\cf0\i0  \cf7 xsi:schemaLocation\cf3 =\cf8\i "http://java.sun.com/xml/ns/javaee {\field{\*\fldinst{HYPERLINK "http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"}}{\fldrslt{\ul\cf1 http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd}}}\f1\fs20 "\cf0\i0  \cf7 id\cf3 =\cf8\i "WebApp_ID"\cf0\i0  \cf7 version\cf3 =\cf8\i "3.0"\cf5\i0\line <\cf6 display-name\cf5 >\cf3 JSP1\cf5 </\cf6 display-name\cf5 >\cf0\line\lang1033\f2\tab\cf5\lang9\f1 <\cf6 welcome-file-list\cf5\lang1033\f2 >\line\tab\tab\lang9\f1 <\cf6 welcome-file\cf5 >\cf3 index.html\cf5 </\cf6 welcome-file\cf5 >\cf0\line\lang1033\f2\tab\tab\cf5\lang9\f1 <\cf6 welcome-file\cf5 >\cf3 index.htm\cf5 </\cf6 welcome-file\cf5 >\cf0\line\lang1033\f2\tab\tab\cf5\lang9\f1 <\cf6 welcome-file\cf5 >\cf3 index.jsp\cf5 </\cf6 welcome-file\cf5 >\cf0\line\lang1033\f2\tab\tab\cf5\lang9\f1 <\cf6 welcome-file\cf5 >\cf3 default.html\cf5 </\cf6 welcome-file\cf5 >\cf0\line\lang1033\f2\tab\tab\cf5\lang9\f1 <\cf6 welcome-file\cf5 >\cf3 default.htm\cf5 </\cf6 welcome-file\cf5 >\cf0\line\lang1033\f2\tab\tab\cf5\lang9\f1 <\cf6 welcome-file\cf5 >\cf3 default.jsp\cf5 </\cf6 welcome-file\cf5\lang1033\f2 >\line\tab\lang9\f1 </\cf6 welcome-file-list\cf5 >\cf0\line\cf5 </\cf6 web-app\cf5 >\cf0\f0\fs22\line\par
\b 2: Create .jsp file:\line\b0 .\cf2 jsp \cf0 files belong in "\cf2 WebContent\cf0 " folder.\line .\cf2 html \cf0 files belong in "\cf2 Java Resources\cf0 " folder.\line\cf9\line\cf0 The .jsp file must have a name matching one of the .jsp files in \cf2 Web.xml.\cf0\line So we can use either index.jsp or default.jsp.\cf9\line\cf0\line\cf2 WebContent --> RIGHTCLICK --> New --> JSP File  \cf4 @5:10: \line\cf9\i (Right click on WebContent folder and select: New --> JSP File)\cf0\i0\line Use: \cf2 Index.jsp \cf0 as our name.    \line Must use one of the .JSP file names mentioned in \cf2 web.xml \cf0 file. \line Clicked on next. Now at:     \cf4  @6:25       \cf0\line\cf2 "Select JSP Template"\cf0  page.            \line\line Choose this template:            \line New JSP File (Html) : JSP with HTML Markup            \line Click FINISH  \cf4 @6:54- 8:25\line\cf0 Just writes HTML inside a .jsp file template. \par
\b 3. Start TomCat server and deploy the project. \b0\line In project explorer find: \cf2 WEB-INF / index.jsp \cf0            \cf4 @8:39- 9:02 :            \cf0\line\cf2 Right Click index.jsp --> run as --> run on server\cf0 . \line\cf2 Next->Finish->Restart Server \cf0 when asked.                 \cf4 @9:02- 9:19 :\line\cf0 Index.jsp is up and running on port 8080                     \cf4  @9:35: \cf0\line\b\par
\ul\fs28 Tutorial Notes #4: JSP Scripting Elements:\ulnone\fs22\line{\field{\*\fldinst{HYPERLINK "https://www.youtube.com/watch?v=ysoeYPYl2KQ"}}{\fldrslt{\ul\cf1 https://www.youtube.com/watch?v=ysoeYPYl2KQ}}}\f0\fs22\line //EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE//\line @:20: Scritping tags.\line\b0\f2 Scriplet      :   <%     %>\line Expression    :   <%=    %>\line Delcaration   :   <%!    %>\line NOTE: You cannot nest tags. \line\b <%   <%    //not allowed   %>   %>\b0\line\line\b @3:00 Expression tag: <%   %>\b0\line Used to print values to web page.\line Does not need ";" terminator.\line Example: In your .JSP file, write:\line\i sum is: <%=  4+7  %>\i0\par
\b\f0 @4:39 Declaration tag: <%!      %>\b0\line Can declare a \b variable \b0 or \b method \b0 inside this tag.\line Goto index.jsp and write this:\line\i <%!    int a=5;    %>\line The value of a is <%=  a  %>\line\line\b\i0 Declaring a function:\i   @7:33 - 7:53\cf4\b0\line (Basically, do it like it were a Java file, but inside <%!   %> block.)\line\cf0\b\i0\f2\fs16 <%!\cf4\b0\i\line\cf10\b\i0 int\cf3\b0  add(\cf10\b int\cf3\b0  a, \cf10\b int\cf3\b0  b)\{\cf0\line\lang1033\tab\cf10\lang9\b int\cf3\b0  op = a+b;\cf0\line\lang1033\tab\cf10\lang9\b return\cf3\b0  op;\cf0\line\cf3\};\line\lang1033\b %>\par
\f0\fs22 My personal understanding/summary of what is going on.\f2\fs16\line\b0 <%= used to display values. Think of it as a print statement. %>\line\line <%! Used to declare functions and variables. %>\line <%! you can write and entire java function in here. %>\par
<%  You write full scripts in here. I am going to think ot %>|\line <%  This tag as an anonymous function block. %>\line <%  I am guessing within the scriplet tag you can %>\line <%  call previously declared functions. %>\cf4\lang9\i\f0\fs22\par
\cf3\lang1033\b\i0\f2\fs16 Index.jsp:\b0\line\cf11\lang9\ul\f1 <%\ulnone @\cf0  \cf6 page\cf0  \cf7 language\cf3 =\cf8\i "java"\cf0\i0  \cf7 contentType\cf3 =\cf8\i "text/html; charset=ISO-8859-1"\cf0\lang1033\i0\f2  \cf7\lang9\f1 pageEncoding\cf3 =\cf8\i "ISO-8859-1"\cf11\i0 %>\cf0\line\cf5 <!\cf6 DOCTYPE\cf0  \cf5 html\cf0  \cf12 PUBLIC\cf0  \cf5 "-//W3C//DTD HTML 4.01 Transitional//EN"\cf0  \cf13 "{\field{\*\fldinst{HYPERLINK "http://www.w3.org/TR/html4/loose.dtd"}}{\fldrslt{\ul\cf1 http://www.w3.org/TR/html4/loose.dtd}}}\f1\fs16 "\cf5 >\cf0\par
\cf5 <\cf6 html\cf5 >\cf0\line\cf5 <\cf6 head\cf5 >\cf0\line\cf5 <\cf6 meta\cf0  \cf7 http-equiv\cf3 =\cf8\i "Content-Type"\cf0\i0  \cf7 content\cf3 =\cf8\i "text/html; charset=ISO-8859-1"\cf5\i0 >\cf0\line\cf5 <\cf6 title\cf5 >\cf3 Insert title here\cf5 </\cf6 title\cf5 >\cf0\line\cf5 </\cf6 head\cf5 >\cf0\par
\cf5 <\cf6 body\cf5 >\cf0\line\cf5 <\cf6 h1\cf5 >\cf3 welcome to JSP\cf5 </\cf6 h1\cf5 >\cf0\line\cf5 <\cf6 p\cf5 >\cf3 JSP is a dynamic \ul webpage\ulnone . \cf5 </\cf6 p\cf5 >\cf0\line\lang1033\f2\tab\cf14\lang9\f1 <!--  declare some variables -->\cf0\line\lang1033\f2\tab\cf11\lang9\f1 <%!\cf3  \cf10\b int\cf3\b0  a = 5; \cf11 %>\cf0\line\lang1033\f2\tab\cf11\lang9\f1 <%!\cf3  \cf10\b int\cf3\b0  b = 7; \cf11 %>\cf0\line\line\lang1033\f2\tab\cf14\lang9\f1 <!--  declare+write function -->\cf0\line\lang1033\f2\tab\cf11\lang9\f1 <%!\cf3  \cf0\line\lang1033\f2\tab\cf10\lang9\b\f1 int\cf3\b0  add(\cf10\b int\cf3\b0  a, \cf10\b int\cf3\b0  b)\{\cf0\line\lang1033\f2\tab\tab\cf10\lang9\b\f1 int\cf3\b0  op = a+b;\cf0\line\lang1033\f2\tab\tab\cf10\lang9\b\f1 return\cf3\b0  op;\cf0\line\lang1033\f2\tab\cf3\lang9\f1\}\lang1033\f2 ;\line\tab\cf11\lang9\f1 %>\cf0\line\line\lang1033\f2\tab\cf14\lang9\f1 <!-- invoke function and show results on web page -->\cf0\line\lang1033\f2\tab\cf11\lang9\f1 <%=\cf3  add(a,b) \cf11 %>\cf0\line\cf5 </\cf6 body\cf5 >\cf0\lang1033\f2\line\cf5\lang9\f1 </\cf6 html\cf5 >\cf0\f0\fs22\line\b //EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE//\b0\line\ul\b\fs28\par
Tutorial Notes #5:\line Interaction between JSP, HTML and XML\ulnone\b0\fs22\line{\field{\*\fldinst{HYPERLINK "https://www.youtube.com/watch?v=BekJw8h7-PU"}}{\fldrslt{\ul\cf1 https://www.youtube.com/watch?v=BekJw8h7-PU}}}\f0\fs22\line @0:00-0:45 Summary\line @0:46 WebContent > New > Html file.\line\cf9 (Right click on WebContent folder in solution explorer, New > Html file)\cf0\par
Name: index.html\line Next\line html5\cf9  (Select the html5 template from the list)\line\cf0 Finish\par
@1:20\line Create a form & Text box so that it will take text as an\line input in the text box.\line\line @1:57 Creating a form with an action.\line <form action ="" ............\line WAIT! We need one more file.\par
@2:11: Making new file.\line Click on WebContent\line New > JSP File > Hello.jsp > Next > JSP with HTML and markup.\par
2:40: Created. We want index.html to interact with Hello.jsp\line I have highlighted the critical parts of the <form> object in red.\line To hopefully save you some debugging time.\line /////////////////////Index.html (Start)//////////////////////////\line\cf3\f1\fs20 <!DOCTYPE html>\line <html>\line <head>\line <meta charset=\i "ISO-8859-1"\i0 >\line <title>Insert title here</title>\line </head>\line <body>\line <form method = \i "post"\lang1033\i0\f2  \lang9\f1 action =\i "\cf2\ul\fs28 hello.jsp\ulnone\fs20 "\cf3  \i0 name=\i "myForm"\i0  >\lang1033\f2\tab\line\tab\lang9\f1 <input type=\i "\cf2 text\cf3 "\i0  name=\i "\cf2 username\cf3 "\i0 >\line\lang1033\f2\tab\lang9\f1 <input type=\i "\cf2 submit\cf3 "\i0  value=\i "go"\i0 ><br/>\line </\cf0 form\cf3 >\line </body>\line </html>\cf0\f0\fs22\line /////////////////////Index.html (End)//////////////////////////\par
@4:54: GoTo: hello.jsp\line Write stuff in the body.\line /////////////////////Hello.jsp (start)/////////////////////////////////////////////////////\line\cf3\ul\f1\fs20 <%\ulnone @ page language=\i "java"\i0  contentType=\i "text/html; charset=ISO-8859-1"\i0\line pageEncoding=\i "ISO-8859-1"\i0 %>\line <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "{\field{\*\fldinst{HYPERLINK "http://www.w3.org/TR/html4/loose.dtd"}}{\fldrslt{\ul\cf1 http://www.w3.org/TR/html4/loose.dtd}}}\f1\fs20 ">\line <html>\line <head>\line <meta http-equiv=\i "Content-Type"\i0  content=\i "text/html; charset=ISO-8859-1"\i0 >\line <title>Insert title here</title>\line </head>\line <body>\line <%\line String j_name = "Run the HTML that leads to this page.";\lang1033\f2  //DEBUG STRING.\lang9\f1\line j_name=request.getParameter("\cf2 username\cf3 ");\line out.print("hello " + j_name);\line %>\line </body>\line </html>\line\cf0\f0\fs22 /////////////////////Hello.jsp (end)/////////////////////////////////////////////////////\par
John Mark Note:\line This line:\line\cf3\f1\fs20 String j_name = "Run the HTML that leads to this page.";\lang1033\f2  //DEBUG STRING.\line Is not in the tutorial.\line I did while debugging to assess that request.getParameter("somethingSomething")\line was indeed returning null. The "username" in hello.jsp must match "username" in\line index.html. In addition to this, you may need to refresh.\line The refresh part was very tricky because you would think that a new browser window\line would be up-to-date. This is not always the case in the Eclipse IDE. Possibly because it is using internet explorer or something.\cf0\lang9\f0\fs22\par
\line\line\par
}
 